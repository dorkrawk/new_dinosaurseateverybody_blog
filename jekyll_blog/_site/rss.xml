<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Dinosaurs Eat Everybody</title>
    <description>For all your Dave Schwantes related needs.</description>    
    <link>http://dinosaurseateverybody.com/blog</link>
    <atom:link href="http://dinosaurseateverybody.com/blog/blog/rss.xml" rel="self" type="application/rss+xml" />
    
      <item>
        <title>Thing A Week 12 - FilterFilter</title>
        <description>&lt;p&gt;So this week I actually made a thing. Back in week&amp;#39;s &lt;a href=&quot;../blog/thing-a-week-4-bird-watcher&quot;&gt;4&lt;/a&gt; and &lt;a href=&quot;../blog/thing-a-week-5-bird-watcher-part-2&quot;&gt;5&lt;/a&gt; I was working on a project to listen to Twitter for pictures with a certain #hastag so I could display them at our wedding. I also wanted to build something similar for Instagram and have it feed into the same database. This became FilterFilter.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://instagram.com/developer/&quot;&gt;Instagram API&lt;/a&gt; works differently than Twitter&amp;#39;s. In order to get real-time information you have to register a callback endpoint with Instagram. This endpoint has to respont to a GET call with a validation code sent by Instgram and then respond to POST with whatever you want. Instagram only notifies you of an event (such as a photo being posted with a certain #hashtag), they don&amp;#39;t actually provide the media info, so you have to find that yourself, which is a bit annoying and kind of clunky.&lt;/p&gt;

&lt;p&gt;Here is the Sinatra code you might used to create the GET and POST endpoints to register and use the Instagram API:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/instagram_stuff&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;hub.challenge&amp;#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# for when you register your callback endpoint&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;/instagram_stuff&amp;#39;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# do stuff when Instagram tells you something &lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#    new has been posted&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I was able to use a lot of the code I wrote for &lt;a href=&quot;https://github.com/dorkrawk/bird-watcher&quot;&gt;BirdWatcher&lt;/a&gt; (the Twitter listener) to store this info, so that was nice. I still need to write a front end to display all of these photos but that will be done some other week. It would be nice to bundle all of this together and create some sort of product for people where they provide a hashtag or keyword and I provide a nice display of photos from various services with those keywords. Maybe someday, when I have time to clean up this code a bit.&lt;/p&gt;

&lt;p&gt;Of course I spent time this week working on RecLab, too. I got some S3 stuff set up and built out a few site forms. We were able to get a rough prototype of the basic track uploading and song creation functionality, which was fun to see. I also spent a bit of time working on our audio processing API. It&amp;#39;s starting to come together and it&amp;#39;s been very interesting designing something like this from the ground up.&lt;/p&gt;

&lt;p&gt;To help us learn more about the types of people who might use RecLab I&amp;#39;ve put together a quick 10 question survey. If you are a musician, please take a minute and fill this out, it would be a big help! &lt;a href=&quot;https://www.surveymonkey.com/s/DPLMSMV&quot;&gt;RecLab Musician Survey&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 30 Mar 2014 00:00:00 -0700</pubDate>
        <link>http://dinosaurseateverybody.com/blog/thing-a-week-12-filterfilter</link>
        <guid isPermaLink="true">http://dinosaurseateverybody.com/blog/thing-a-week-12-filterfilter</guid>
      </item>
    
      <item>
        <title>Thing A Week 11 - More RecLab</title>
        <description>&lt;p&gt;Once again this week&amp;#39;s work was devoted more to a long term project than to anything that could be finished in 7 days. I put more work into the site and the audio processing tools for RecLab and we&amp;#39;ve been doing some good planning, too.&lt;/p&gt;

&lt;p&gt;The site is pretty straight forward Rails, so far. Nothing too out of the ordinary there. I&amp;#39;m starting to get deeper into the music objects and business logic of the site, which is fun. I&amp;#39;ve also been working a bit with Flask as a wrapper around some of the audio processing stuff. After &lt;a href=&quot;../blog/thing-a-week-7-flask&quot;&gt;Week 7&lt;/a&gt; I had been looking for a good Flask project and now I&amp;#39;ve found one! I&amp;#39;ve found some great resources on building good APIs in Flask, such as &lt;a href=&quot;http://pycoder.net/bospy/presentation.html&quot;&gt;this one&lt;/a&gt; which have been really helpful for designing non-trivial stuff. I have a bit of experience building APIs with a micro web framework from building the &lt;a href=&quot;https://github.com/dorkrawk/unofficial-fitocracy-runs-api&quot;&gt;Unofficial Fitocracy Runs API&lt;/a&gt; in Sinatra, but this will be a bit more complex than that.&lt;/p&gt;

&lt;p&gt;Hopefully we&amp;#39;ll have something that I can actually show off soon. We&amp;#39;ll certainly need early testers. I do still hope to have work on a few small projects that I can show off from week to week.&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Mar 2014 00:00:00 -0700</pubDate>
        <link>http://dinosaurseateverybody.com/blog/thing-a-week-11-more-reclab</link>
        <guid isPermaLink="true">http://dinosaurseateverybody.com/blog/thing-a-week-11-more-reclab</guid>
      </item>
    
      <item>
        <title>Thing A Week 10 - RecLab Site</title>
        <description>&lt;p&gt;Once again I feel like I&amp;#39;m stretching the rules of A Thing a Week (which is ok because I sort of just made them up). This week I focused on starting the website for a new larger project I&amp;#39;ve started working on with a friend. We&amp;#39;re trying to build a good way for musicians to collaborate online. There are a few things out there trying to address something similar to this, but none of them seem to have serious traction and it looks like there&amp;#39;s a lot of room for refinement.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../blog_media/reclab1.png&quot; class=&quot;inline_right&quot; /&gt;
This week we did a lot of planning and architecture for the project and I started building the Rails application for the site. This is my first non-trivial Rails 4 project and it&amp;#39;s been interesting to see some of the little differences. The biggest one I&amp;#39;ve come across so far is the removal of &lt;code&gt;attr_accessible&lt;/code&gt; and moving that functionality into the controller. I need to learn a bit more about how that totally works but so far I&amp;#39;ve been able to use a lot of what I learned building Rails 3.2 stuff.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve been really impressed with the Rails 4 gem compatibility, as well. Major stuff I like to use such as &lt;a href=&quot;https://github.com/plataformatec/devise&quot;&gt;Devise&lt;/a&gt;, &lt;a href=&quot;https://github.com/gregbell/active_admin&quot;&gt;Active Admin&lt;/a&gt;, and &lt;a href=&quot;https://github.com/thoughtbot/paperclip&quot;&gt;Paperclip&lt;/a&gt; are all working just fine. Python could &lt;a href=&quot;http://python3wos.appspot.com/&quot;&gt;learn a lot&lt;/a&gt; here!&lt;/p&gt;

&lt;p&gt;This week I was able to get the basic site together, make it look nice enough to work in for a while, build basic user/user profile and login functionality, and start building out some of the core business logic for working with recorded tracks. I also started putting together some survey questions so, musician friends, expect to be bugged to be asked questions soon. It might be a little while before we have an actual site for people to try but I&amp;#39;m always interested in talking with people about the idea.&lt;/p&gt;

&lt;p&gt;Now I need to balance working on this with doing a couple other single-week projects, especially the stuff that is needed for the wedding.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Mar 2014 00:00:00 -0700</pubDate>
        <link>http://dinosaurseateverybody.com/blog/thing-a-week-10-reclab-site</link>
        <guid isPermaLink="true">http://dinosaurseateverybody.com/blog/thing-a-week-10-reclab-site</guid>
      </item>
    
      <item>
        <title>Thing A Week 9 - No Thing</title>
        <description>&lt;p&gt;So this week was not a good Thing a Week week. I had planned to build the Instragram listener to go along with the Bird Watcher project I was working on a few weeks ago, but I ended up sort of bouncing around between a few ideas instead. This is a bit against the &amp;quot;Thing a Week&amp;quot; idea where I complete something every week rather than randomly playing around with stuff to no clear end.&lt;/p&gt;

&lt;p&gt;That said I did git a bit of work done in a few areas. &lt;/p&gt;

&lt;p&gt;I started the Instagram work and learned a bit more about how their streaming API works. It looks like I&amp;#39;ll need to build a callback endpoint to take in post info and store things in a database and then Instagram will handle most of the hard work. I&amp;#39;ll probably just end up building the callback endpoint as part of the exiting daveandeileen.com &lt;a href=&quot;https://github.com/dorkrawk/daveandeileen_site&quot;&gt;Sinatra application&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I also spent some time doing a bit of research on audio processing libraries for another project I&amp;#39;m planning. As of now I&amp;#39;m leaning towards &lt;a href=&quot;http://pydub.com/&quot;&gt;PyDub&lt;/a&gt;. Hopefully I&amp;#39;ll have some work from that project to post soon.&lt;/p&gt;

&lt;p&gt;Finally, I&amp;#39;m planning to build a ring box for our wedding out of an old book (kind of like &lt;a href=&quot;http://cdn0.pairswellwithfood.com/wp-content/uploads/2012/11/Pommes-Frites-Flask-Book-Holder.jpg&quot;&gt;this&lt;/a&gt;, but with wedding rings). I was able to find a book I like at a used bookstore this weekend, so I consider that a small win.&lt;/p&gt;

&lt;p&gt;This wasn&amp;#39;t a great Thing a Week week, but at least I got a few productive things done.&lt;/p&gt;
</description>
        <pubDate>Mon, 10 Mar 2014 00:00:00 -0700</pubDate>
        <link>http://dinosaurseateverybody.com/blog/thing-a-week-9-no-thing</link>
        <guid isPermaLink="true">http://dinosaurseateverybody.com/blog/thing-a-week-9-no-thing</guid>
      </item>
    
      <item>
        <title>Thing A Week 8 - In The Garage Cover</title>
        <description>&lt;p&gt;I had a little bit of trouble picking my project this week. Originally I had planned to continue working with Flask, but I was just at a loss for a small web app project idea. I had been playing around with some Weezer songs while playing guitar one morning so I decided to record a cover of &lt;a href=&quot;http://www.rdio.com/artist/Weezer/album/Weezer/track/In_The_Garage/&quot;&gt;In The Garage&lt;/a&gt; for this week&amp;#39;s thing. If you don&amp;#39;t feel like reading this to get all the way down to the Soundcloud player here&amp;#39;s &lt;a href=&quot;https://soundcloud.com/dorkrawk/in-the-garage-cover&quot;&gt;a link&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was pretty faithful to the original, mainly just taking some liberties with instrumentation in a few parts. I really like the dirty guitar and bass in song so I found some amp models that kept with that style. I did swap out the harmonica riff for a thin, high piano part over a crunchy bass. I really liked the hollow sound it created and it felt in line with my tendency to add keys to things. In that same vein, I used some synth in a few parts as well, replacing the little guitar riff in the verse and working with the guitar in the solo.&lt;/p&gt;

&lt;p&gt;I actually had a lot of fun with the solo, again staying pretty true to the original but taking some liberties here and there. The synth was a fun addition and really beefed things up. I ended up falling back on some blues riffing during the end of the solo because I&amp;#39;m just not as metal as Rivers.&lt;/p&gt;

&lt;p&gt;Again I used Garageband&amp;#39;s Drummer feature for the drums. I spent a bit of time dialing them in and I was pleased with how they turned out. While laying out the song I did discover that Garageband doesn&amp;#39;t let you change time signatures in the middle of a song. There is a single measure of 2/4 time in the verse so I had to just offset thing. I was worried that the automated drumming would sound weird around this change, but it ended up being fine.&lt;/p&gt;

&lt;p&gt;The vocals... This is always tough for me. The verses turned out ok. They&amp;#39;re pretty straight forward and in my range but the chorus was tough. Some of the high notes were a big of a strain for me and in general the choruses felt a bit lack luster. I just don&amp;#39;t know how to get more character out of my voice. The last chorus with the high harmonies was especially difficult. I was &lt;em&gt;really&lt;/em&gt; straining my voice there. As always, doing stuff like this is great practice and helps me improve so I just need to keep that perspective.&lt;/p&gt;

&lt;p&gt;I wasn&amp;#39;t especially pleased with the mixing and production on this song. I felt a bit rushed because I started working on this a little later in the week. I had recorded some of the guitar parts in a chopped up way and I can hear some lack of fluidity. None of the parts were difficult enough to get right to justify this type of recording but I was just in a rush to get something down. In general I think things just feel a bit choppy, but I suppose that&amp;#39;s the price of doing things on a time crunch.&lt;/p&gt;

&lt;p&gt;All in all, it was a fun project and it&amp;#39;s alway nice to spend time recording.  Enjoy:&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/137828215&amp;amp;color=ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_artwork=true&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;strong&gt;bonus thing!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I also posted a comic to &lt;a href=&quot;http://mountsaintawesome.com/&quot;&gt;Mount Saint Awesome&lt;/a&gt; this week (the first in quite a while). It didn&amp;#39;t feel like a big enough art project to be a full Thing a Week thing, but it&amp;#39;s still worth &lt;a href=&quot;http://mountsaintawesome.com/comic.php?id=78&quot;&gt;checking out&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Mar 2014 00:00:00 -0800</pubDate>
        <link>http://dinosaurseateverybody.com/blog/thing-a-week-8-in-the-garage-cover</link>
        <guid isPermaLink="true">http://dinosaurseateverybody.com/blog/thing-a-week-8-in-the-garage-cover</guid>
      </item>
    
      <item>
        <title>Thing A Week 7 - Flask</title>
        <description>&lt;p&gt;Now, in my defense I was pretty sick for most of last week so I ended up not getting much done outside of work besides a lot of napping. I started with a vague plan to do &lt;em&gt;something&lt;/em&gt; with &lt;a href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt;, the Python micro-webframework and to that end I succeeded in what I set out to do. It had been a while since I had done anything serious with Python and I&amp;#39;ve been feeling the urge to get back into it.&lt;/p&gt;

&lt;p&gt;I ended up spending a lot of time just getting my Python development environment set up. Apparently it&amp;#39;s been so long since I&amp;#39;ve done anything non-trivial in the language that I didn&amp;#39;t even have basic tools set up well on this computer. I wanted to do things right and that took a bit of installing and uninstalling through various channels to get things just so. This meant Python installed threw Homebrew and then using that version of &lt;code&gt;pip&lt;/code&gt; to install &lt;code&gt;virtualenv&lt;/code&gt;. This way I didn&amp;#39;t have to use &lt;code&gt;sudo&lt;/code&gt; to install &lt;code&gt;virtualenv&lt;/code&gt;. While this ended up being more frustrating than it should have been (and at one point led to me asking a &lt;a href=&quot;http://stackoverflow.com/questions/21917619/error-with-installing-virtualenv-with-pip-and-homebrew&quot;&gt;Stack Overflow question&lt;/a&gt; that I later answered for myself) I did get things set up nicely, which is a major win.&lt;/p&gt;

&lt;p&gt;Once I got down to setting up Flask thing were pretty smooth. For the basic stuff I was doing it felt very similar to Sinatra, which I&amp;#39;ve worked with quite a bit. I finally got to use Python&amp;#39;s method decorators in practice which was neat (they drive the routing around the functions related to the routes).&lt;/p&gt;

&lt;p&gt;The end result was a pretty basic first test site. Nothing really worth putting up anywhere. I&amp;#39;d like to keep playing with Flask and get a bit more reacquainted with Python so unless I have another burning project come up, I might just stick with it this week too.&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Feb 2014 00:00:00 -0800</pubDate>
        <link>http://dinosaurseateverybody.com/blog/thing-a-week-7-flask</link>
        <guid isPermaLink="true">http://dinosaurseateverybody.com/blog/thing-a-week-7-flask</guid>
      </item>
    
      <item>
        <title>Thing A Week 6 - Piano and Bass Song</title>
        <description>&lt;p&gt;I think that it&amp;#39;s fair to call this Thing A Week a failure and I don&amp;#39;t really have a great excuse. I set out to write a song that revolved around the piano and bass and I ended up with a nice riff that didn&amp;#39;t go anywhere.&lt;/p&gt;

&lt;p&gt;This tends to happen to me a lot. My Garageband folder is full of 30 second long riffs and fleshed out song chunks, but I often hit a wall and I&amp;#39;m not sure where to go from there. Last week I sat down and tried writing some stuff influenced by a couple songs that either did piano and bass or just bass licks well. The main ones I referred to were &lt;a href=&quot;http://www.rdio.com/artist/Ben_Folds_Five/album/The_Sound_Of_The_Life_Of_The_Mind/track/Erase_Me/&quot;&gt;Erase Me&lt;/a&gt; by Ben Folds Five and &lt;a href=&quot;http://www.rdio.com/artist/Brand_New/album/Deja_Entendu/track/Sic_Transit_Gloria_..._Glory_Fades/&quot;&gt;Sic Transit Gloria...Glory Fades&lt;/a&gt; by Brand New. They are both awesome songs and I especially love the way the piano and bass work together in the Ben Folds song but my ideas just weren&amp;#39;t working. I ended up with some weird meandering minor bass parts thrown over some really weak piano parts.&lt;/p&gt;

&lt;p&gt;I came back the next day and switched to a major key and started with the piano part first. From there I came up with something that I liked and wrote a simple bass part that just harmonized the piano roots in a few parts.&lt;/p&gt;

&lt;p&gt;And that&amp;#39;s where I got stuck. I spent a bit of time playing around with some sparse guitar parts and a few of the new amp models in the new version of Garageband. I also played around with the new Drummer feature of Garageband. It was pretty cool and maybe the most redeeming quality of Garageband X (the removal of the old keyboard shortcuts and export to mp3 are driving me nuts and might send my back to version 6!). The drum sounds are great and it&amp;#39;s a big step up from the midi drum parts I had been working with in the old version of Garageband, but I did feel a bit uncomfortable with the loss of control over every single hit. I suppose it&amp;#39;s a decent compromise.&lt;/p&gt;

&lt;p&gt;So here&amp;#39;s what I came up with. I ended up just doing some random guitar riffing and bigger chords at some point, but it really just felt forced and didn&amp;#39;t take the song anywhere. Take a listen, though, because the piano/bass part turned out pretty nice: &lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/135426611&amp;amp;color=ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_artwork=true&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;I&amp;#39;d like to keep working with this song. It&amp;#39;s different than most of the stuff I&amp;#39;ve written lately. I think that throwing lyrics over it will be a bit of a challenge just because I don&amp;#39;t quite trust my voice for something this mellow, but it&amp;#39;s a fun part and I think it could turn into something cool.&lt;/p&gt;

&lt;p&gt;This week I&amp;#39;m leaning towards either a project with Python (I&amp;#39;ve been meaning to brush up on my Python for a while) or something artistic. I&amp;#39;m still not quite sure.&lt;/p&gt;
</description>
        <pubDate>Mon, 17 Feb 2014 00:00:00 -0800</pubDate>
        <link>http://dinosaurseateverybody.com/blog/thing-a-week-6-piano-bass-song</link>
        <guid isPermaLink="true">http://dinosaurseateverybody.com/blog/thing-a-week-6-piano-bass-song</guid>
      </item>
    
      <item>
        <title>Thing A Week 5 - Bird Watcher (Part 2)</title>
        <description>&lt;p&gt;So I took this week to wrap up last week&amp;#39;s project. I was having trouble getting the Twitter listener for my wedding photo project up and running on my server but I&amp;#39;m pleased to report that I managed to get things up and running.&lt;/p&gt;

&lt;p&gt;I ended up changing the format of the project a bit. Instead of a full Sinatra application I put everything into a single Ruby file that I can just leave running whenever I want to fire up the listener. I didn&amp;#39;t need this project to serve any content, only run Tweet Stream and write to a database, so Sinatra was probably overkill to begin with.&lt;/p&gt;

&lt;p&gt;I had some trouble with &lt;a href=&quot;http://sequel.jeremyevans.net/&quot;&gt;Sequel&lt;/a&gt;, the Gem I was using to interface with the Postgres database but eventually got things worked out. The weirdest issue was with trying to store the url of the photo.  For some reason this didn&amp;#39;t work:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;store_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet_photo_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:photos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:photo_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet_photo_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;twitter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:photo_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;but this did:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;store_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet_photo_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet_user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;the_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet_photo_url&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
  
  &lt;span class=&quot;vi&quot;&gt;@db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:photos&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;insert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:photo_url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;twitter&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:username&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;screen_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:photo_text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet_text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It must have something to do with the way Ruby handles certain strings or how Sequel or Postgres handle certain strings in INSERTs.&lt;/p&gt;

&lt;p&gt;You can see the final file I&amp;#39;m using &lt;code&gt;bird_watcher.rb&lt;/code&gt; in the &lt;a href=&quot;https://github.com/dorkrawk/bird-watcher&quot;&gt;Github repo&lt;/a&gt; for the project.  &lt;/p&gt;

&lt;p&gt;Next I&amp;#39;ll need to write an Instragram listener. Hopefully that will be pretty quick as most of the mechanics will be identical to this listener. I might hold off on working on that for a bit, though. I&amp;#39;m thinking about tackling a musical project next week.&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Feb 2014 00:00:00 -0800</pubDate>
        <link>http://dinosaurseateverybody.com/blog/thing-a-week-5-bird-watcher-part-2</link>
        <guid isPermaLink="true">http://dinosaurseateverybody.com/blog/thing-a-week-5-bird-watcher-part-2</guid>
      </item>
    
      <item>
        <title>Does Anyone Still Use RSS?</title>
        <description>&lt;p&gt;Since the death of Google Reader I feel like I&amp;#39;ve seen people use RSS less and less, but a quick informal survey of friends showed that some people still use it for some things so maybe this blog should have a feed, right?.&lt;/p&gt;

&lt;p&gt;I was interested in how hard it would be to add RSS to this weird Jekyll/Sinatra hybrid I have running and had a few minutes tonight so I decided to give it a shot. It turned out to not be bad.  I just followed &lt;a href=&quot;http://blog.drewinglis.com/2013/03/18/adding-rss.html&quot;&gt;this quick tutoral&lt;/a&gt; and found &lt;a href=&quot;https://github.com/snaptortoise/jekyll-rss-feeds&quot;&gt;a nice template here&lt;/a&gt; and 90% of the work was done (basically I just add another template to my Jekyll project and a few lines in my config and an xml file gets generated along with everything else when I run &lt;code&gt;jekyll build&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The only custom part was adding a few lines to my Jekyll handler method in my main Sinatra app to suppress the layout template and render the RSS file as XML: &lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;include?&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;rss.xml&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;content_type&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;text/xml&amp;#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; 
  &lt;span class=&quot;n&quot;&gt;erb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contents&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you can subscribe to this blog via &lt;a href=&quot;http://dinosaurseateverybody.com/blog/rss.xml&quot;&gt;RSS&lt;/a&gt; is you so desire!&lt;/p&gt;
</description>
        <pubDate>Thu, 06 Feb 2014 00:00:00 -0800</pubDate>
        <link>http://dinosaurseateverybody.com/blog/does-anyone-still-use-rss</link>
        <guid isPermaLink="true">http://dinosaurseateverybody.com/blog/does-anyone-still-use-rss</guid>
      </item>
    
      <item>
        <title>Thing A Week 4 - Bird Watcher</title>
        <description>&lt;p&gt;This week might count as a partial failure plus I&amp;#39;m getting the post up pretty late, so that&amp;#39;s probably not good either.&lt;/p&gt;

&lt;p&gt;Once again I tackled a project for the wedding. I want to build a system that listens to Twitter and Instagram for photos that are tagged #daveandeileen then pulls them in and displays them somewhere at the wedding. This week I decided to finish up the Twitter listener.&lt;/p&gt;

&lt;p&gt;This listener is basically just a small Sinatra app that uses &lt;a href=&quot;https://github.com/tweetstream/tweetstream&quot;&gt;TweetStream&lt;/a&gt; to listen for tagged tweets and then if it matches the criteria (has image and is properly tagged) it stores info about the tweet into a database. This same database will eventually hold Instagram (this was the whole reason I signed up for &lt;a href=&quot;http://instagram.com/dorkrawk&quot;&gt;Instragram&lt;/a&gt;) data and then I&amp;#39;ll need to write a nice front end that pulls the photo data out and displays the pictures in some nice way.&lt;/p&gt;

&lt;p&gt;I call this week a partial failure because I got the app working locally, but ran into some trouble getting it deployed properly. I am not a great sys admin, but I&amp;#39;m learning a few things. This is also the first time I&amp;#39;ve set up a database on my VPS. I&amp;#39;ve really been spoiled by always working with databases through a nice visual interface so doing some Postgres work while sshed into my server felt like pulling teeth. I was just running into some issues pretty late on Sunday night so I ended up admitting defeat and went to bed. You can check out the code for this project on &lt;a href=&quot;https://github.com/dorkrawk/bird-watcher&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This next week (the week we are currently experiencing right now) is pretty busy. We&amp;#39;re trying to finish up a bunch of other big wedding things (stuff that doesn&amp;#39;t involve coding) and my parents are in town this weekend, so I know I&amp;#39;m going to be limited for &amp;quot;thing a week&amp;quot; time. I would like to use this week to finish off the deployment for Bird Watcher. I feel bad about letting a project spread over two weeks but I think it&amp;#39;s best for my schedule and this project. &lt;/p&gt;
</description>
        <pubDate>Tue, 04 Feb 2014 00:00:00 -0800</pubDate>
        <link>http://dinosaurseateverybody.com/blog/thing-a-week-4-bird-watcher</link>
        <guid isPermaLink="true">http://dinosaurseateverybody.com/blog/thing-a-week-4-bird-watcher</guid>
      </item>
    
  </channel>
</rss>